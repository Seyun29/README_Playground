name: Dispatch Test

on:
  workflow_dispatch:
    inputs:
      env:
          type: choice
          description: select deploy environment
          required: true
          options:
            - development
            - staging
            - production
      #in case of deploying to multiregion
      region:
        type: choice
        required: true
        description: Choose Region for production (only for ECS-MultiRegion deployment)
        options:
          - Tokyo
          - Seoul
          - Oregon
          - Frankfurt
          - Skip (Not deploying to ECS-MultiRegion)
        default: Skip (Not deploying to ECS-MultiRegion)

env:
  INPUT_ENV: ${{ github.event.inputs.env }}
  INPUT_REGION: ${{ github.event.inputs.region }}
      
jobs:
  TESTS:
    runs-on: ubuntu-latest
    steps:
      - name: Check if region input is provided
        run: |
          if [[ "${{ github.event.inputs.region }}" == "null" ]]; then
            echo "Region input not provided"
          else
            echo "Region input provided: ${{ github.event.inputs.region }}"
          fi
        shell: bash

      - name: condition test
        run: |     
          echo "RESULT=${{ github.event_name == 'push' && 'PUSH_EVENT' || 'OTHER_EVENT' }}" >> $GITHUB_ENV
          echo "${{ github.event_name == 'push' && 'PUSH_EVENT' || 'OTHER_EVENT' }}"
          
      # - name: set Message
      #   run: |
      #     echo "MESSAGE=${{ env.INPUT_REGION == 'Skip (Not deploying to ECS-MultiRegion)' && 'DEPLOYMENT SUCCESS in ${{ env.INPUT_ENV }}' || 'DEPLOYMENT SUCCESS in ${{ env.INPUT_ENV }} - ${{ env.INPUT_REGION }}' }}" >> $GITHUB_ENV

      # - name: show Message
      #   run: |
      #     echo "Message : ${{ env.MESSAGE }}"
      - name: set Message String to Show
        run: |
          echo "${{ env.INPUT_REGION == 'Skip (Not deploying to ECS-MultiRegion)' && format('DEPLOYMENT SUCCESS in {0}', env.INPUT_ENV) || format('DEPLOYMENT SUCCESS in {0} - {1}', env.INPUT_ENV, env.INPUT_REGION) }}"

