name: Dispatch Test

on:
  workflow_dispatch:
    inputs:
      env:
          type: choice
          description: select deploy environment
          required: true
          options:
            - development
            - staging
            - production
      #in case of deploying to multiregion
      region:
        type: choice
        required: true
        description: Choose Region for production (only for ECS-MultiRegion deployment)
        options:
          - Tokyo
          - Seoul
          - Oregon
          - Frankfurt
          - Skip (Not deploying to ECS-MultiRegion)
        default: Skip (Not deploying to ECS-MultiRegion)

env:
  INPUT_ENV: ${{ github.event.inputs.env }}
  INPUT_REGION: ${{ contains(github.event.inputs.region, 'Skip') && 'Skip' || github.event.inputs.region }}
  #위 replacement 적용하기
      
jobs:
  TESTS:
    runs-on: ubuntu-latest
    steps:
      - name: checkout Repository
        id: checkOut
        uses: actions/checkout@v4.1.1
      
      - name: print region
        id: print
        if: ${{ !always() }}
        run: |
          echo "${{ env.INPUT_REGION }}"

      - name: set Message String to Show
        id: set
        run: |
          echo "${{ contains( github.repository, '/rakuten-drive-cloud-transfer' ) && format('DEPLOYMENT {0} in {1}', contains(join(steps.*.outcome, ','), 'success') && 'SUCCESS' || 'FAILED' , env.INPUT_ENV) || format('DEPLOYMENT {0} in {1} - {2}', contains(join(steps.*.outcome, ','), 'success') && 'SUCCESS' || 'FAILED', env.INPUT_ENV, env.INPUT_REGION) }}"

      - name: test composite action with inputs
        uses: ./.github/actions/test/slack-test/
        with:
          WEBHOOK: 'hello'
          TITLE: >-
            ${{ contains( github.repository, '/rakuten-drive-cloud-transfer' )
            && format('DEPLOYMENT {0} in {1}', contains(join(steps.*.outcome, ','), 'success') && 'SUCCESS' || 'FAILED' , env.INPUT_ENV) 
            || format('DEPLOYMENT {0} in {1} - {2}', contains(join(steps.*.outcome, ','), 'success') && 'SUCCESS' || 'FAILED', env.INPUT_ENV, env.INPUT_REGION) }}
          MESSAGE: ${{ contains(join(steps.*.outcome, ','), 'success') }}

      #multiline 테스트
      #환경변수 덮어쓰기 테스트
      #슬랙 composite action 테스트
      #build 테스트 (policy, cloud-transfer, fe-b2b)
      #release, ci 주석 처리 후 테스트 (policy, cloud-transfer, fe-b2b)



      # - name: Slack Notification
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          

  
    # steps:
    #   - name: Check if region input is provided
    #     run: |
    #       if [[ "${{ github.event.inputs.region }}" == "null" ]]; then
    #         echo "Region input not provided"
    #       else
    #         echo "Region input provided: ${{ github.event.inputs.region }}"
    #       fi
    #     shell: bash

    #   - name: condition test
    #     run: |     
    #       echo "RESULT=${{ github.event_name == 'push' && 'PUSH_EVENT' || 'OTHER_EVENT' }}" >> $GITHUB_ENV
    #       echo "${{ github.event_name == 'push' && 'PUSH_EVENT' || 'OTHER_EVENT' }}"
        
